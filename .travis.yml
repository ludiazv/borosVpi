# Automate build for VPI
dist: xenial
services:
  - docker
language: rust
cache: 
  cargo: true
  directories:
    - /home/travis/build/ludiazv/borosVpi/vpid/target

script:
  - mkdir -p dist
  - cd firmware_borosVPi
  - docker run -it --rm --name tools -v "$PWD":/usr/src/myapp -w /usr/src/myapp python:3.7-slim python tools.py -b install
  - echo -e '#include <stdio.h>\n#include "inc/version.h"\n int main() { printf("%i\\n",VPI_VERSION); return 0; }' > fwver.c
  - docker run -it --rm -v "$PWD":/tmp frolvlad/alpine-gcc gcc --static /tmp/fwver.c -o /tmp/fwver
  - make release && mv build/release/firmware_boot.bin ../dist/firmware-v$(./fwver).bin
  - export VPI_TRACES=Yes && make clean && make release && mv build/release/firmware_boot.bin ../dist/firmware-traces-v$(./fwver).bin
  - make clean && docker rmi python:3.7-slim && docker rmi frolvlad/alpine-gcc
  - cd ..
  - ls -l dist/*
  - cd vpid
  #- docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - ./buildall.sh travis
  - cd ..
  - ./create_release.sh

deploy:
  provider: releases
  api_key: 
    secure: h1TUOrNR44F9kmB1dUHXs4xFHGRa6WyAqVkhr3PS4jzE/RpYZiejJlMZY9fyWAKKgQXZxdpiCYacKy3sS0ZYrFydu7Yi2EjrfgtMB4QwZhXwXcuPfym5UO5Ny3n2StwaGQRvu9p8FhAX51NzJBl107G6TWhK9DYsFqELjERRbfRsXo5HGUNSI2FgIL0nX3XvhSST4hXJ1/dNbGOA0uXMAYGOCcd/Nok2mMqLfcfgmqZYFanp/jH6+uBW2bxPr6BnTtSxkcehNZ4LHzd1zNa0pLh0jycqPKRMj8uW6wk4mo+OhDymqmqeuQJAksJ9awmXCLIg9JC+FtzI/3Za8o/aO6wDx0ebQH0t9VmcE5dcQkEF2iCc7yTwciVwIUbJ4SNcMW0nDGApczJkxesp4zmp+MfB77hZtAWL7XJ3vy+vd1UBoyKeqaWGGs3P7D1F0tEwSYdM3e+xLWmU5ai7c0sfeRw0vCJoBjlEXiphNNYJXxyShGPEo3aczmaD6oDdqKhFRvDMI7EibZHPneERuI0a5SOo84+bYzfrN1bVLjIxYlgj26rYLnyxdjP+K/3nlh6xwBLN18ykFQ60GdQlO15kOHpxtI1/+pZPl/mwXW1Mi+3qtvqx4K+h8E6AIw8rIOYvIygCH+inNtdiHdLaBuwukVwICVAJdQK90p3cyHfVwTI=%
  file_glob: true
  file: dist/*
  skip_cleanup: true
  draft: true
  prelease: true
  name: "test release"
  body: "test bodys"


